from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from  .models import shortly
import random, string

# Create your views here.
@login_required(login_url = '/login/')
def dashboard(request):
    # get all short url generated by a user
    current_user = request.user
    all_urls = shortly.objects.filter(user = current_user)
    return render(request, 'dashboard.html', { 'urls' : all_urls })

#generate random string for our short url
def generateRandomString():
    return ''.join(random.choice(string.ascii_lowercase) for _ in range(6))

# shorten url generation
@login_required(login_url= '/login/')
def generate_url(request):
    if request.method == "POST":
        # check original url and short url are filled by user or not
        if request.POST['original'] and request.POST['short']:
            # generate short url based on user input
            # collect the data from form:
            original_url = request.POST['original']
            # get the current loggedIn User
            current_user = request.user
            
            short_url = request.POST['short']
            
            # check if short url already exists in database
            check_url = shortly.objects.filter(short_url = short_url)
            if not check_url:
                # create new short url 
                new_short_url = shortly(
                    user = current_user,
                    original_url = original_url,
                    short_url = short_url
                )
                # save the newly generated short url records into database
                new_short_url.save()
                return redirect(dashboard)
            else:
                messages.error(request, "Given input already exists, please try with another string !" )
                return redirect(dashboard)
                
        elif request.POST['original']:
            #  generate short url randomly
            # collect the data from form:
            original_url = request.POST['original']
            # get the current loggedIn User
            current_user = request.user
            
            # flag to check short url is generated or not
            generated_flag = False
            
            # create short url 
            while not generated_flag:
                random_short_url = generateRandomString()
                # now check this short url is exists in out database or not
                check_url = shortly.objects.filter(short_url = random_short_url)
                if not check_url:
                     # create new short url 
                    new_short_url = shortly(
                        user = current_user,
                        original_url = original_url,
                        short_url = random_short_url
                    )
                    # save the newly generated short url records into database
                    new_short_url.save()
                    return redirect(dashboard)
                else:
                    continue
        else:
            messages.error(request, "Please check empty fields !" )
            return redirect(dashboard)
    else:
        return redirect('/dashboard')
    
def home(request, query_string=None):
    if not query_string or query_string is None:
        return render(request, 'home.html')
    else:
        try:
            # check the short url as per query string
            check_url = shortly.objects.get(short_url = query_string)
            check_url.visits = check_url.visits + 1 
            check_url.save()
            # now redirect to orignial url assoicated with short url
            url_redirect = check_url.original_url
            return redirect(url_redirect)
        
        except shortly.DoesNotExist:
            return render(request, 'home.html', {'error': 'There are something error!'})
            